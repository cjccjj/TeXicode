name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
          - os: macos-latest
            arch: x64
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: ${{ matrix.arch }}

      - name: Install PyInstaller (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
        shell: bash

      - name: Install PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
        shell: pwsh

      - name: Build executable (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: pyinstaller --onefile ./src/main.py --name txr
        shell: bash

      - name: Build executable (Windows)
        if: matrix.os == 'windows-latest'
        run: pyinstaller --onefile ./src/main.py --name txr
        shell: pwsh

      - name: Rename artifact (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: mv dist/txr "txr-${{ matrix.os }}-${{ matrix.arch }}"
        shell: bash

      - name: Rename artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: Rename-Item "dist\txr.exe" "txr-${{ matrix.os }}-${{ matrix.arch }}.exe"
        shell: pwsh

      - name: Create Release (if not exists)
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to release (Linux/macOS)
        if: matrix.os != 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: "txr-${{ matrix.os }}-${{ matrix.arch }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to release (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: "txr-${{ matrix.os }}-${{ matrix.arch }}.exe"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
